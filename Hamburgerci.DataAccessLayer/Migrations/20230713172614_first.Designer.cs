// <auto-generated />
using System;
using Hamburgerci.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hamburgerci.DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230713172614_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hamburgerci.EntityLayer.Beverage", b =>
                {
                    b.Property<int>("BeverageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeverageID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("BeverageID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Beverages");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Burger", b =>
                {
                    b.Property<int>("BurgerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BurgerID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("BurgerID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Burgers");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.HasIndex("OrderID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Fry", b =>
                {
                    b.Property<int>("FryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FryID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("FryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Fries");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"), 1L, 1);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("MenuID");

                    b.HasIndex("OrderID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"), 1L, 1);

                    b.Property<int>("OrderSizeOrder")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Sauce", b =>
                {
                    b.Property<int>("SauceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SauceID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("SauceID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Sauces");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Beverage", b =>
                {
                    b.HasOne("Hamburgerci.EntityLayer.Category", "BeverageCategory")
                        .WithMany("CategoryBeverage")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeverageCategory");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Burger", b =>
                {
                    b.HasOne("Hamburgerci.EntityLayer.Category", "BurgerCategory")
                        .WithMany("CategoryBurger")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BurgerCategory");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Category", b =>
                {
                    b.HasOne("Hamburgerci.EntityLayer.Order", "CategoryOrder")
                        .WithMany("OrderCategory")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryOrder");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Fry", b =>
                {
                    b.HasOne("Hamburgerci.EntityLayer.Category", "FryCategory")
                        .WithMany("CategoryFry")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FryCategory");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Menu", b =>
                {
                    b.HasOne("Hamburgerci.EntityLayer.Order", "MenuOrder")
                        .WithMany("OrderMenu")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuOrder");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Sauce", b =>
                {
                    b.HasOne("Hamburgerci.EntityLayer.Category", "SauceCategory")
                        .WithMany("CategorySauce")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SauceCategory");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Category", b =>
                {
                    b.Navigation("CategoryBeverage");

                    b.Navigation("CategoryBurger");

                    b.Navigation("CategoryFry");

                    b.Navigation("CategorySauce");
                });

            modelBuilder.Entity("Hamburgerci.EntityLayer.Order", b =>
                {
                    b.Navigation("OrderCategory");

                    b.Navigation("OrderMenu");
                });
#pragma warning restore 612, 618
        }
    }
}
